@startuml

skinparam classAttributeIconSize 0

'packages
package "Employee "
{
    class Employee <<Entity>> {
        -id: Long
        -name: String
        -role: String
        -email: String
        -department: Department
        +Employee(name: String, role: String, email: String, department: Department?)
        +<get,set>id(): Long
        +<get,set>name(): String
        +<get,set>role(): String
        +<get,set>email(): String
        +equals(o: object): Boolean
        +hashCode(): Int
        +toString(): String
    }

    class EmployeeController <<RestController>> {
        -repository: EmployeeRepository
        +EmployeeController(repository: EmployeeRepository)
        +all(): Employee[]
        +newEmployee(newEmployee: Employee): Employee
        +one(id: Long): Employee
        +replaceEmployee(newEmployee: Employee, id: Long): Employee
        +deleteEmployee(id: Long): Void
    }

    interface EmployeeRepository{}

    class EmployeeNotFoundAdvice <<ControllerAdvice>> {
        +employeeNotFoundHandler(ex: EmployeeNotFoundException): String
    }
    class EmployeeNotFoundException{
        +EmployeeNotFoundException(id: Long): RuntimeException
    }
}

package "Department "
{
    class Department <<Entity>> {
        -id: Long
        -name: String
        +Department(name: String)
        +<get,set>id(): Long
        +<get,set>name(): String
        +equals(o: object): Boolean
        +hashCode(): Int
        +toString(): String
    }

    class DepartmentController <<RestController>> {
        -repository: DepartmentRepository
        +DepartmentController(repository: DepartmentRepository)
        +all(): Department[]
        +newDepartment(newDepartment: Department): Department
        +one(id: Long): Department
        +replaceDepartment(newDepartment: Department, id: Long): Department
        +deleteDepartment(id: Long): Void
    }

    interface DepartmentRepository{}

    class DepartmentNotFoundAdvice <<ControllerAdvice>> {
        +departmentNotFoundHandler(ex: DepartmentNotFoundException): String
    }
    class DepartmentNotFoundException{
        +departmentNotFoundException(id: Long): RuntimeException
    }
}


package "Repositories"
{
    class LoadDatabase <<Configuration>> {
        -log: Logger
        +initDatabase(repository: EmployeeRepository): CommandLineRunner
    }
}

package "Spring"
{
    class JpaRepository{}
}

package "Java"
{
    class RuntimeException{}
}


'relations

'Employee
EmployeeController --> EmployeeRepository
EmployeeController --> Employee

EmployeeController ..> EmployeeNotFoundException : throws
EmployeeNotFoundAdvice --> EmployeeNotFoundException

EmployeeRepository --|> JpaRepository
EmployeeNotFoundException --|> RuntimeException

LoadDatabase --> EmployeeRepository

'Department
DepartmentController --> DepartmentRepository
DepartmentController --> Department

DepartmentController ..> DepartmentNotFoundException : throws
DepartmentNotFoundAdvice --> DepartmentNotFoundException

DepartmentRepository --|> JpaRepository
DepartmentNotFoundException ---|> RuntimeException

LoadDatabase --> DepartmentRepository

@enduml